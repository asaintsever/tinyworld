<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>asaintsever.tinyworld</groupId>
    <artifactId>tinyworld</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>ui</artifactId>

  <properties>
    <flatlaf.version>2.4</flatlaf.version>
    <worldwindjava.version>2.2.0</worldwindjava.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>asaintsever.tinyworld</groupId>
      <artifactId>cfg</artifactId>
    </dependency>
    <dependency>
      <groupId>asaintsever.tinyworld</groupId>
      <artifactId>indexor</artifactId>
    </dependency>

    <!-- jul-to-slf4j bridge since FlatLaf and WWJ make use of JUL (java.util.logging) to log messages -->
    <!-- Route JUL logs to log4j via SLF4J -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>com.formdev</groupId>
      <artifactId>flatlaf</artifactId>
      <version>${flatlaf.version}</version>
    </dependency>
    <dependency>
      <groupId>gov.nasa.worldwind</groupId>
      <artifactId>worldwindjava</artifactId>
      <version>${worldwindjava.version}</version>
    </dependency>

    <!-- Required to compile GlobeGLCanvas class -->
    <!-- Ignore maven warnings on this dep -->
    <dependency>
      <groupId>com.jogamp</groupId>
      <artifactId>jogl-all</artifactId>
      <version>2.4</version>
      <scope>system</scope>
      <systemPath>${basedir}/globe/deps/wwj/lib/jogl-all.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>com.jogamp</groupId>
      <artifactId>gluegen-rt</artifactId>
      <version>2.4</version>
      <scope>system</scope>
      <systemPath>${basedir}/globe/deps/wwj/lib/gluegen-rt.jar</systemPath>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
    </resources>
    
    <plugins>
      <!-- run mvn validate once to copy provided WWJ jar into local M2 repository -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.5.2</version>
        <executions>
          <execution>
            <id>install-wwwj-jar</id>
            <goals>
              <goal>install-file</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
	          <groupId>gov.nasa.worldwind</groupId>
	          <artifactId>worldwindjava</artifactId>
	          <version>${worldwindjava.version}</version>
	          <packaging>jar</packaging>
	          <file>${basedir}/globe/deps/wwj/worldwind-${worldwindjava.version}.jar</file>
	          <generatePom>true</generatePom>
	        </configuration>
          </execution>
          <execution>
            <id>install-wwwj-sources-jar</id>
            <goals>
              <goal>install-file</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
	          <groupId>gov.nasa.worldwind</groupId>
	          <artifactId>worldwindjava</artifactId>
	          <version>${worldwindjava.version}</version>
	          <packaging>jar</packaging>
	          <classifier>sources</classifier>
	          <file>${basedir}/globe/deps/wwj/worldwind-${worldwindjava.version}-sources.jar</file>
	          <generatePom>true</generatePom>
	        </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <!-- copy JOGL libs required by WWJ -->
          <execution>
            <id>copy-wwj-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/deps</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/globe/deps/wwj/lib</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- copy tinyworld config -->
          <execution>
            <id>copy-ui-config</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/config</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/resources/config</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- copy tinyworld dependencies -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>copy-tinyworld-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeGroupIds>asaintsever.tinyworld</includeGroupIds>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>copy-3rdparty-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <excludeGroupIds>asaintsever.tinyworld</excludeGroupIds>
              <excludeScope>system</excludeScope> <!-- To not copy again jogl-all/gluegen jars (as we had to declare them as system scope deps to be able to compile GlobeGLCanvas class) -->
              <outputDirectory>${project.build.directory}/deps</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- To test via 'mvn package -Dmaven.test.skip=true -P UI' -->
    <profile>
      <id>UI</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>run-tinyworld</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <configuration>
              <executable>java</executable>
              <workingDirectory>${project.build.directory}</workingDirectory>
              <arguments>
                <!-- Workaround issues using JOGL library with Java 8+ -->
                <argument>--add-exports</argument>
                <argument>java.base/java.lang=ALL-UNNAMED</argument>
                <argument>--add-exports</argument>
                <argument>java.desktop/sun.awt=ALL-UNNAMED</argument>
                <argument>--add-exports</argument>
                <argument>java.desktop/sun.java2d=ALL-UNNAMED</argument>
                <!-- Workaround issues using JOGL library with Java 8+ -->
                <argument>-Xmx2048m</argument>
                <!-- TinyWorld'UI jar must come before WorldWind as we override some messages in MessageStrings.properties file -->
                <argument>-cp</argument>
                <argument>*:deps/*</argument>
                <argument>asaintsever.tinyworld.ui.UI</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
